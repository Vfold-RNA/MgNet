#!/bin/bash

while getopts i:o:lrh flag
do
    case "${flag}" in
        i) mgnet_in_rna=${OPTARG};;
        o) mgnet_out_dir=${OPTARG};;
        l) mgnet_load="true";;
        r) mgnet_remove="true";;
        h) mgnet_help="true";;
    esac
done

if [ "${mgnet_help}" != "" ]
then
    echo "Usage: "
    echo "pull MgNet container image from Docker Hub                 -> mgnet -l"
    echo "remove loaded MgNet container image                        -> mgnet -r"
    echo "run MgNet model (default out_dir is current dir) -> mgnet -i in_rna_pdb -o out_dir"
    exit
fi

if [ "${MGNET_HOME}" == "" ]
then
    echo "environment varible MGNET_HOME has not been set"
    exit
fi

image_tag="vfold/mgnet:1.0.0"

if [ "${mgnet_load}" != "" ]
then
    echo "pulling MgNet container image from Docker Hub..."
    docker pull ${image_tag}
    exit
fi

if [ "${mgnet_remove}" != "" ]
then
    echo "removing MgNet container image in docker..."
    if [[ "$(docker images -q ${image_tag} 2> /dev/null)" != "" ]]
    then
        docker image rm ${image_tag}
    fi
    exit
fi

echo "in_rna: ${mgnet_in_rna}"
echo "out_dir: ${mgnet_out_dir}"

if [ ! -f "${mgnet_in_rna}" ]
then
    echo "in_rna -> ${mgnet_in_rna} does not exist"
    exit
fi
if [ ! -d "${mgnet_out_dir}" ]
then
    echo "out_dir -> ${mgnet_out_dir} does not exist"
    exit
fi

mgnet_in_rna_full_path=$(realpath ${mgnet_in_rna})
mgnet_out_dir_full_path=$(realpath ${mgnet_out_dir})
mgnet_in_rna_file_name=$(basename ${mgnet_in_rna})

docker run --ipc=host -it --rm --gpus all --name=mgnet \
       --mount type=bind,source=${mgnet_in_rna_full_path},target=/tmp/${mgnet_in_rna_file_name},readonly \
       --mount type=bind,source=${mgnet_out_dir_full_path},target=/mnt \
       ${image_tag} \
       /bin/bash -c "mgnet.py -i /tmp/${mgnet_in_rna_file_name} -o /mnt/ ; user_id=\$(ls -ld /mnt | awk '{print \$3}') ; chown \${user_id}:\${user_id} /mnt/*_model_*_prediction.pdb"
